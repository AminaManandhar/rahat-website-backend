// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum TxnsStatus {
  SUCCESS
  PENDING
  FAILED
}


enum Gender {
  M
  F
  O
}

model Community {
  id              Int                      @id @default(autoincrement())
  title           String                   @unique
  description     String?
  location        String?
  establishedDate String?
  summary         CommunitiesBeneficiary[]
  donation        DonationTransaction[]
  createdAt       DateTime                 @default(now())
  updatedAt       DateTime                 @updatedAt
  projects      CommunityProject[]
}

model Beneficiary {
  id            Int      @id @default(autoincrement())
  gender        Gender
  walletAddress String?
  age           Int
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
}

model CommunitiesBeneficiary {
  id          Int         @id @default(autoincrement())
  summaryType String
  summaryData Json
  community   Community @relation(fields: [communityId], references: [id])
  communityId Int
}

enum DonorType {
  organization
  individual
}

model Donor {
  id          Int            @id @default(autoincrement())
  name        String
  email       String
  donorType   DonorType
  phoneNumber String
  donations   DonationTransaction[]
}

model DonationTransaction {
  id      Int             @id @default(autoincrement())
  status  TxnsStatus
  txnDate DateTime        @default(now())
  donor   Donor           @relation(fields: [donorId], references: [id])
  donorId Int
  donee   Community     @relation(fields: [doneeId], references: [id])
  doneeId Int
  txnHash String
  amount  Float
}

model Project {
  id          Int                @id @default(autoincrement())
  name        String
  description String
  manager     String
  communities CommunityProject[]
}

model CommunityProject {
  id          Int     @id @default(autoincrement())
  communities Community @relation(fields: [communityId], references: [id])
  communityId Int
  projects    Project @relation(fields: [projectId], references: [id])
  projectId   Int
}

model CommunityTransasction {
  id          Int        @id @default(autoincrement())
  communityId Int
  txnHash     String
  txnDate     DateTime
  status      TxnsStatus
}
